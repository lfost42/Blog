@using BlogLibrary.Databases.Interfaces
@using BlogLibrary.Models
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common

@inject IImageService imageService

@model IPagedList<ArticleModel>

@{
    ViewData["Title"] = "Search Index";
}

<h3>Search Results</h3>

<div class="row">
    @foreach(var item in Model)
    {
        <div class="col-sm-12 col-lg-4 gy-2">
            <div class="card border-dark p-1 h-100">
                <div class="card-body text-center h-100">
                    <div class="bg-warning">
                        <hr class="card-hr" />
                        <h5 class="card-title">@item.Title</h5>
                        <hr class="card-hr" />
                    </div>
                </div>
                <div>
                    <p class="card-text">@item.Summary</p>
                </div>

                <br />
                <div class="text-center">
                    <a class="btn btn-dark btn-sm btn-block mb-2 w-100" asp-action="Details" asp-controller="Articles" asp-route-slug="@item.Slug">Read More</a>
                </div>


                @*<img class="card-img-bottom" style="height: 200px" src="@imageService.DecodeImage(item.Image.ImageData,  item.Image.ImageExtension)" />*@
                <div class="card-footer"></div>
            </div>
        </div>
    }
</div>

<hr />
<div class="row">
    <div class="col h3">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    </div>
</div>

<div class="row">
    <div class="col">
        @Html.PagedListPager(Model, page => Url.Action("SearchIndex", new { page = page, searchTerm = ViewData["searchTerm"] }),
    new PagedListRenderOptions
    {
        LiElementClasses = new string[] { "page-item" },
        PageClasses = new string[] { "page-link" }
    })
    </div>
</div>