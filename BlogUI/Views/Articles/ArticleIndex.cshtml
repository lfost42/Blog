@using BlogLibrary.Databases.Interfaces
@using BlogLibrary.Models
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common

@inject IImageService imageService

@model IPagedList<ArticleModel>

@{
    ViewData["Title"] = "ArticleIndex";
}

<h3>Article Index</h3>

@if (User.IsInRole("Owner"))
{
<p>
    <a asp-action="Create">Create New</a>
</p>
}

<table class="table">
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title) <br />
                    @Html.DisplayFor(modelItem => item.Summary)
                </td>
                <td>
                    Created: @Html.DisplayFor(modelItem => item.Created)<br />
                    Status: @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @if (item.Image != null)
                    {
                        <img height="70px" src="@imageService.DecodeImage(item.Image.ImageData, item.Image.ImageExtension)" />
                    }
                </td>
                <td>
                    @if (User.IsInRole("Owner"))
                    {
                        <a asp-action="Edit" asp-route-slug="@item.Slug">Edit</a>
                        <a asp-action="Delete" asp-route-slug="@item.Slug">Delete</a>
                    }
                    <a asp-action="Details" asp-route-slug="@item.Slug">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<hr />
<div class="row">
    <div class="col h3">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    </div>
</div>

<div class="row">
    <div class="col">
        @Html.PagedListPager(Model, page => Url.Action("ArticleIndex", new { id = Model.FirstOrDefault().SeriesModelId }),
    new PagedListRenderOptions
    {
        LiElementClasses = new string[] { "page-item" },
        PageClasses = new string[] { "page-link" }
    })
    </div>
</div>