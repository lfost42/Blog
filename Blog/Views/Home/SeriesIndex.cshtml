@using Blog.Data.Models
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@using Blog.Data.Databases.Interfaces
@inject IImageService imageService

@model IPagedList<SeriesModel>

@{ ViewData["Title"] = "Home"; }
@{ ViewData["Image"] = "https://www.lfost42-blog/herokuapp.com/app.png"; }
<div class="container">
    <div class="row">

        @foreach (var item in Model)
        {
        <div class="col-sm-12 col-md-6 col-lg-4 gy-2 mb-2 border-0">
            <div class="card p-3 h-100">
                <a asp-controller="Articles" asp-action="ArticleIndex" asp-route-id="@item.Id">

                    @if (item.Image != null)
                    {
        <img src="@imageService.DecodeImage(item.Image.ImageData, item.Image.ImageExtension)" class="card-img-top" />}
                </a>
                <div class="card-body text-start h-100">
                    <h5 class="card-title">@item.Title</h5>
                    <p class="card-text">@item.Description</p>
                </div>
            </div>
        </div>}
    </div>
</div>

@if (Model.PageCount > 1)
{
<hr />
<div class="row">
    <div class="col">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page }),
                     new PagedListRenderOptions
                     {
                         LiElementClasses = new string[] { "page-item" },
                         PageClasses = new string[] { "page-link" }
                     })
    </div>
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
</div>
}